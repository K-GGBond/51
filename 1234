#include"reg51.h"

typedef unsigned char u8;
typedef unsigned int u16;

sbit LSA = P2^2;
sbit LSB = P2^3;
sbit LSC = P2^4;
sbit LSD = P2^5;

#define GPIO_KEY P1

u8 k=1;
u8 symbol[20];
u16 j = 0,i=0;
u16 shuzi[30]={0};
u16 result;

u8 code smgduan[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};

void delay(u16 i)
{
	while(i--);
}

void DigDisplay(u8 ch,u16 wei)
{
	switch(wei)
	{
			case 0:
				LSA=0;LSB=0;LSC=0;LSD=0;
			break;
			case 1:
				LSA=1;LSB=0;LSC=0;LSD=0;
			break;
			case 2:
				LSA=0;LSB=1;LSC=0;LSD=0;
			break;
			case 3:
				LSA=1;LSB=1;LSC=0;LSD=0;
			break;
			case 4:
				LSA=0;LSB=0;LSC=1;LSD=0;
			break;
			case 5:
				LSA=1;LSB=0;LSC=1;LSD=0;
			break;
			case 6:
				LSA=0;LSB=1;LSC=1;LSD=0;
			break;
			case 7:
				LSA=1;LSB=1;LSC=1;LSD=0;
			break;
	}
	P0=smgduan[ch];
	delay(100);
	P0=0x00;
}

void xianshi(int num)
{
	u16 ch[10],i=0;
	u16 p=10,q=1,Tem;
	Tem=num;
	
	while(Tem!=0)
	{
		ch[i]=num%p/q;
		DigDisplay(ch[i],i);
		i++;
		p*=10;
		q*=10;
		Tem/=10;
	}
}

void counter()//ji shuan qi
{
	u8 a=0;
	u16 limit,button;
	GPIO_KEY = 0x0f;
	if ( GPIO_KEY != 0x0f )//press
	{
		delay(1000);
		if( GPIO_KEY != 0x0f )
		{
			GPIO_KEY = 0x0f;
			switch (GPIO_KEY)//press line
			{
				case 0x07:
					button=1;
					break;
				case 0x0b:
					button=2;
					break;
				case 0x0d:
					button=3;
					break;
			}
			GPIO_KEY = 0xf0;
			switch (GPIO_KEY)//press row
			{
				case 0x70:
					button=button;
					break;
				case 0xb0:
					button=button+3;
					break;
				case 0xd0:
					button=button+6;
					break;
			}
			i=j;
			GPIO_KEY=0x0f;
			if(GPIO_KEY==0x0b)//0
			{
				GPIO_KEY=0xf0;
				if(GPIO_KEY==0xe0)
				{
					k=1;
					button=0;
					shuzi[j] = shuzi[j] * 10 + button;
				}
				i=j;
			}
			GPIO_KEY = 0x0f;
			if(GPIO_KEY==0x07||GPIO_KEY==0x0b||GPIO_KEY==0x0d)
			{
				GPIO_KEY=0xf0;
				if(GPIO_KEY==0x70||GPIO_KEY==0xb0||GPIO_KEY==0xd0)
				{
					k=1;
					shuzi[j] = shuzi[j] * 10 + button;
				}
				i=j;
			}
			
			GPIO_KEY=0x0f;
			if(GPIO_KEY==0x07)//gui ling
			{
				GPIO_KEY=0xf0;
				if(GPIO_KEY==0xe0)
				{
					k=2;
					j=0;
					button=0;
					result=0;
					for(i=0;i<30;i++)
					{
						shuzi[i]=0;
					}
					i=j;
				}
			}
			
			GPIO_KEY=0x0f;
			if(GPIO_KEY==0x0e)
			{
				GPIO_KEY=0xf0;
				switch(GPIO_KEY)
				{
					case 0x70://0x70
						symbol[j] = '+';
						j++;
					break;
					case 0xb0://0xb0
						symbol[j] = '-';
						j++;
					break;
					case 0xd0://0xd0
						symbol[j] = '*';
						j++;
					break;
					case 0xe0://0xe0
						symbol[j] = '/';
						j++;
					break;
				}
				i=j-1;
			}

			GPIO_KEY=0x0f;
			if(GPIO_KEY==0x0d)
			{
				GPIO_KEY=0xf0;
				if(GPIO_KEY==0xe0)
				{
					i=0;
					limit = j+1;
					k = 0;
					while(i<limit)
					{
						if(symbol[i]=='*')
						{
							shuzi[i] = shuzi[i]*shuzi[i+1];
							for(j=i+1;j<limit;j++)
							{
								shuzi[j]=shuzi[j+1];
								symbol[j-1]=symbol[j];
							}
							limit--;
						}
						else if(symbol[i]=='/')
						{
							shuzi[i]=shuzi[i]/shuzi[i+1];
							for(j=i+1;j<limit;j++)
							{
								shuzi[j]=shuzi[j+1];
								symbol[j-1]=symbol[j];
							}
							limit--;
						}
						else
						{
							i++;
						}
					}
					result=shuzi[0];
					for(i=0;i<limit;i++)
					{
						if(symbol[i]=='+')
						{
							result=result+shuzi[i+1];
						}
						else if(symbol[i]=='-')
						{
							result=result-shuzi[i+1];
						}
					}
				}
			}
			
			while((a<50)&&(GPIO_KEY!=0x0f))
			{
				delay(1000);
				a++;
			}
		}
	}
	
	if(!k)//k=0;
	{
		xianshi(result);
	}
	else if(k==2)
	{
		P0=smgduan[0];
	}
	else
	{
		xianshi(shuzi[i]);
	}
}

void main()
{
	LSA = 0;
	LSB = 0;
	LSC = 0;
	while(1)
	{
		counter();
	}
}
